<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Security on Buffer Overflow</title><link>/notes/java/security/</link><description>Recent content in Security on Buffer Overflow</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="/notes/java/security/index.xml" rel="self" type="application/rss+xml"/><item><title>Adding Certificates to the TrustStore</title><link>/notes/java/security/adding_certs_to_truststore/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/notes/java/security/adding_certs_to_truststore/</guid><description>&lt;p>Building a Dockerfile that needs to read {1..n} certificates from a given directory like &lt;code>/usr/local/share/ca-certificates/extra&lt;/code> and load each certificate into Java&amp;rsquo;s CA TrustStore. This bash snippet will do the job:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> CERT_FILE in &lt;span style="color:#66d9ef">$(&lt;/span>find /usr/local/share/ca-certificates/extra -type f&lt;span style="color:#66d9ef">)&lt;/span>; &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Adding &lt;/span>$CERT_FILE&lt;span style="color:#e6db74"> to Java keystore&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $JAVA_HOME/bin/keytool -importcert -trustcacerts -cacerts &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -alias &lt;span style="color:#66d9ef">$(&lt;/span>echo $CERT_FILE | xargs basename | sed &lt;span style="color:#e6db74">&amp;#39;s#.*/##; s#[.][^.]*$##&amp;#39;&lt;/span>&lt;span style="color:#66d9ef">)&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -file $CERT_FILE -keypass changeit -storepass changeit -noprompt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">done&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description><content>&lt;p>Building a Dockerfile that needs to read {1..n} certificates from a given directory like &lt;code>/usr/local/share/ca-certificates/extra&lt;/code> and load each certificate into Java&amp;rsquo;s CA TrustStore. This bash snippet will do the job:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> CERT_FILE in &lt;span style="color:#66d9ef">$(&lt;/span>find /usr/local/share/ca-certificates/extra -type f&lt;span style="color:#66d9ef">)&lt;/span>; &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Adding &lt;/span>$CERT_FILE&lt;span style="color:#e6db74"> to Java keystore&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $JAVA_HOME/bin/keytool -importcert -trustcacerts -cacerts &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -alias &lt;span style="color:#66d9ef">$(&lt;/span>echo $CERT_FILE | xargs basename | sed &lt;span style="color:#e6db74">&amp;#39;s#.*/##; s#[.][^.]*$##&amp;#39;&lt;/span>&lt;span style="color:#66d9ef">)&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -file $CERT_FILE -keypass changeit -storepass changeit -noprompt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">done&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>Investigating untrusted certificates</title><link>/notes/java/security/investigating_certs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/notes/java/security/investigating_certs/</guid><description>&lt;p>Running a Java application and receiving an error about an untrusted certificate - usually something like &amp;ldquo;unable to find valid certification path to requested target&amp;rdquo;. Add these options to the Java command line to spit SSL/TLS handshake and certificate data onto the console:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>-Djavax.net.debug&lt;span style="color:#f92672">=&lt;/span>ssl:handshake:verbose:keymanager:trustmanager
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-Djava.security.debug&lt;span style="color:#f92672">=&lt;/span>access:stack
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Or, if you really like hard mode:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>-Djavax.net.debug&lt;span style="color:#f92672">=&lt;/span>all
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description><content>&lt;p>Running a Java application and receiving an error about an untrusted certificate - usually something like &amp;ldquo;unable to find valid certification path to requested target&amp;rdquo;. Add these options to the Java command line to spit SSL/TLS handshake and certificate data onto the console:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>-Djavax.net.debug&lt;span style="color:#f92672">=&lt;/span>ssl:handshake:verbose:keymanager:trustmanager
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-Djava.security.debug&lt;span style="color:#f92672">=&lt;/span>access:stack
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Or, if you really like hard mode:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>-Djavax.net.debug&lt;span style="color:#f92672">=&lt;/span>all
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item></channel></rss>